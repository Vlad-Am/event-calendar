services:

  nginx:
    image: nginx:latest
    container_name: calendar-nginx
    ports:
      - "80:80"  # HTTP доступ
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Подключение конфигурации Nginx
      - static_volume:/usr/src/app/static  # Статические файлы
      - media_volume:/usr/src/app/media    # Медиа-файлы
    depends_on:
      - web
    networks:
      - calendar_network

  web:
    container_name: calendar-web
    build: .  # build the docker, using the dockerfile in current dir

    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && gunicorn eventcalendar.wsgi:application --bind 0.0.0.0:8000"

    ports:
      - "8001:8000"  # Порт для доступа из интернета

    volumes:
      - static_volume:/usr/src/app/static  # Хранение статических файлов
      - media_volume:/usr/src/app/media    # Медиа-файлы

    environment:
      - DJANGO_SETTINGS_MODULE=eventcalendar.settings
      - DEBUG=False  # Продакшен не должен использовать DEBUG=True

    depends_on:
      db:
        condition: service_healthy

    networks:
      - calendar_network

  db:
    container_name: calendar-db
    image: postgres:16-alpine

    environment:
      POSTGRES_DB: calendar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: "!!UZH_CNSP24_CALENDAR!!"

    ports:
      - "15432:5432"

    volumes:
      - db_data:/var/lib/postgresql/data  # Persistently store the data even when the docker is deleted or stopped

    healthcheck:
      test: ["CMD-SHELL", "psql -h localhost -U $${POSTGRES_USER} -c select 1 -d $${POSTGRES_DB}"]
      interval: 1s
      timeout: 5s
      retries: 10

    networks:
      - calendar_network

networks:
  calendar_network:
    external: true

volumes:
  static_volume:  # Для статических файлов
  media_volume:   # Для медиа-файлов
  db_data:        # Для данных базы
